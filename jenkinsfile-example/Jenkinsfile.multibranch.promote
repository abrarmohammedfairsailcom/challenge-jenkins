#!/usr/bin/env groovy
@Library('jenkins-slack@git_branch') _

def notifier = new org.example.jenkins.slack.SlackNotifier()

node {
  try {

    env.SLACK_CHANNEL = 'build'
    env.SLACK_DOMAIN  = 'example'
    env.SLACK_CREDENTIALS = 'Slack-Build-Channel-Token'
    env.CHANGE_LIST = 'true'
    env.TEST_SUMMARY = 'false'
    env.NOTIFY_SUCCESS = 'true'

    env.BRANCH_NAME_PROD = 'master'
    env.BRANCH_NAME_STAGE = 'stage'
    env.BRANCH_NAME_DEMO = 'demo'

    stage('Checkout'){
      checkout scm
    }
    stage('Start'){
      notifier.notifyStart()
    }
    stage('Preview Git Merge'){
      if (env.BRANCH_NAME == env.BRANCH_NAME_STAGE){
        sh 'make preview-stage-to-master'
        sh 'make preview-stage-to-demo'
      }
    }
    stage('Promote Master'){
      if (env.BRANCH_NAME == env.BRANCH_NAME_STAGE){
        sh 'make promote-stage-to-master'
        notifier.notifyResult()
      }
    }
    stage('Promote AppDemo'){
      if (env.BRANCH_NAME == env.BRANCH_NAME_STAGE){
        sh 'make promote-stage-to-demo'
        notifier.notifyResult()
      }
    }
    } catch (err) {
      currentBuild.result = 'FAILURE'
      notifier.notifyError(err)
      throw err
    }
}
